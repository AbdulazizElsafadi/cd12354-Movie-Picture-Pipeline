name: Backend Continuous Integration

on:
  workflow_dispatch:

    # remove it
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: pip install pipenv

      - name: Cache pipenv virtualenvs
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('starter/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Install Dependencies
        working-directory: starter/backend
        run: pipenv install

      - name: Verify flake8 Installation
        working-directory: starter/backend
        run: pipenv run which flake8

      - name: Check Application Styles
        working-directory: starter/backend
        run: pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: pip install pipenv

      - name: Cache pipenv virtualenvs
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('starter/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Install Dependencies
        working-directory: starter/backend
        run: pipenv install

      - name: Test Application
        working-directory: starter/backend
        run: pipenv run test

  # build:
  #   needs: [lint, test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.10"

  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-

  #     - name: Install Dependencies
  #       working-directory: starter/backend
  #       run: pipenv install

  #     - name: Test Application
  #       working-directory: starter/backend
  #       run: pipenv run test

  #     - name: Build Application
  #       working-directory: starter/backend
  #       run: npm run build
