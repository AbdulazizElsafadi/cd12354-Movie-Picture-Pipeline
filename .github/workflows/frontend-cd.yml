name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main
jobs:
  lint_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install Dependencies
        working-directory: starter/frontend
        run: npm ci

      - name: Check Application Styles
        working-directory: starter/frontend
        run: npm run lint

      - name: Test Application
        working-directory: starter/frontend
        run: npm test

  build:
    needs: [lint_test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Application with Docker
        working-directory: starter/frontend
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag mp-frontend:${{ github.sha }} .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Tag and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: frontend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag mp-frontend:${{ github.sha }} $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Kubeconfig Auth
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1 --profile github-action-user

      - name: Set the Deployment image to latest version
        working-directory: starter/frontend/k8s
        run: |
          kustomize edit set image $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Apply the manifests to the cluster
        working-directory: starter/frontend/k8s
        run: |
          kustomize build | kubectl apply -f -
